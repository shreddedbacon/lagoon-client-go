// Code generated by go-bindata. (@generated) DO NOT EDIT.

 //Package lgraphql generated by go-bindata.// sources:
// _lgraphql/addBillingGroup.graphql
// _lgraphql/addEnvVariable.graphql
// _lgraphql/addGroup.graphql
// _lgraphql/addGroupsToProject.graphql
// _lgraphql/addNotificationEmail.graphql
// _lgraphql/addNotificationMicrosoftTeams.graphql
// _lgraphql/addNotificationRocketChat.graphql
// _lgraphql/addNotificationSlack.graphql
// _lgraphql/addNotificationToProject.graphql
// _lgraphql/addOpenshift.graphql
// _lgraphql/addOrUpdateEnvironment.graphql
// _lgraphql/addProject.graphql
// _lgraphql/addProjectToBillingGroup.graphql
// _lgraphql/addSshKey.graphql
// _lgraphql/addUser.graphql
// _lgraphql/addUserToGroup.graphql
// _lgraphql/allEnvironments.graphql
// _lgraphql/allOpenshifts.graphql
// _lgraphql/deleteOpenshift.graphql
// _lgraphql/deployEnvironmentBranch.graphql
// _lgraphql/deployEnvironmentLatest.graphql
// _lgraphql/deployEnvironmentPromote.graphql
// _lgraphql/deployEnvironmentPullrequest.graphql
// _lgraphql/environmentByName.graphql
// _lgraphql/environmentByOpenshiftProjectName.graphql
// _lgraphql/fragments/fragmentMinimalAllEnvironments.graphql
// _lgraphql/fragments/fragmentMinimalEnvironmentByOpenshiftProjectname.graphql
// _lgraphql/fragments/fragmentMinimalProjectByName.graphql
// _lgraphql/fragments/fragmentProjectByName.graphql
// _lgraphql/lagoonSchema.graphql
// _lgraphql/lagoonVersion.graphql
// _lgraphql/me.graphql
// _lgraphql/projectByName.graphql
// _lgraphql/projectsByMetadata.graphql
// _lgraphql/removeProjectMetadataByKey.graphql
// _lgraphql/updateOpenshift.graphql
// _lgraphql/updateProjectMetadata.graphql
package lgraphql

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __lgraphqlAddbillinggroupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x89\x24\x97\x16\x15\xa5\xe6\x25\x57\x5a\x29\x38\x43\x59\x10\xf1\xa4\xcc\x9c\x9c\xcc\xbc\xf4\xe0\xfc\xb4\x92\xf2\xc4\x22\xb8\x26\x4d\x85\x6a\x2e\x05\x05\x05\x85\xc4\x94\x14\x27\x88\x0a\xf7\xa2\xfc\xd2\x02\x8d\xcc\xbc\x82\xd2\x12\x2b\xa8\xa4\x82\x02\xc4\x1e\xb0\x75\x3a\x50\x21\x84\x45\x70\x3b\x61\x52\x18\x76\xa1\xdb\x0e\x56\x57\xab\x09\x37\x3e\x33\x05\xc9\x1e\x88\x24\x17\x08\x03\x02\x00\x00\xff\xff\x90\xae\x83\xc3\xed\x00\x00\x00")

func _lgraphqlAddbillinggroupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddbillinggroupGraphql,
		"_lgraphql/addBillingGroup.graphql",
	)
}

func _lgraphqlAddbillinggroupGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddbillinggroupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addBillingGroup.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddenvvariableGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xb1\xca\xc3\x20\x14\x46\xf7\x3c\xc5\xf7\xc3\x3f\x24\x90\x27\x70\xef\x90\x39\xa5\xfb\x6d\x95\x22\x24\x37\x21\xbd\x06\x42\xe9\xbb\x17\xbd\xda\x4a\x07\x97\x73\xd4\xef\xcc\x41\x48\xfc\xc2\x68\x1b\xe0\x5f\x8e\xd5\x19\x9c\x78\xbf\xd0\xe6\xe9\x3a\xb9\xf3\xb1\xba\xbf\xbe\xa8\xc1\x1a\x0c\x2c\x0a\x1e\xb7\xe5\xe7\xf2\x18\x89\x4a\xa6\xd9\x19\x8c\xb2\x79\xbe\x2b\xd9\x69\x0a\x5f\xd4\xe1\xd9\x00\x00\x59\x5b\x7d\xd0\x7a\x5e\x83\x98\xec\x00\xcd\x49\xd3\x7d\x85\x62\x46\xee\x29\x38\xc7\x68\x54\x81\x1a\x91\x5a\x0a\xca\x15\x5a\x93\xd8\xab\xfb\xcc\x79\x5b\x3d\x54\xd9\xc4\xf3\x0e\x00\x00\xff\xff\x1d\x4f\x13\xd7\x24\x01\x00\x00")

func _lgraphqlAddenvvariableGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddenvvariableGraphql,
		"_lgraphql/addEnvVariable.graphql",
	)
}

func _lgraphqlAddenvvariableGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddenvvariableGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addEnvVariable.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddgroupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x54\xa8\xe6\x52\x50\x50\x50\x48\x4c\x49\x71\x2f\xca\x2f\x2d\xd0\xc8\xcc\x2b\x28\x2d\xb1\x82\x8a\x2a\x28\x40\x14\x83\xf5\x80\x45\x6a\x35\xe1\x52\x99\x29\x48\x6a\x20\x92\x5c\x20\x0c\x08\x00\x00\xff\xff\x33\xcc\xe8\xad\x6e\x00\x00\x00")

func _lgraphqlAddgroupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddgroupGraphql,
		"_lgraphql/addGroup.graphql",
	)
}

func _lgraphqlAddgroupGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddgroupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addGroup.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddgroupstoprojectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x29\x28\xca\xcf\x4a\x4d\x2e\xb1\x52\x08\x80\x30\x3c\xf3\x0a\x4a\x4b\x14\x75\x40\x52\xe9\x45\xf9\xa5\x05\xc5\x56\x0a\xd1\xee\x20\x06\x44\x22\x56\x51\x53\xa1\x9a\x4b\x41\x41\x41\x21\x31\x25\x05\x2c\x5e\x1c\x92\x0f\xd5\xaa\x91\x09\x52\x62\x05\x95\x57\x50\x80\x1b\x0d\xb3\x04\x2a\x0e\x33\x17\x6a\x01\x58\xb4\x56\x13\xae\x2d\x33\x05\xca\xc8\x4b\xcc\x4d\x85\x48\x72\x81\x30\x20\x00\x00\xff\xff\x8b\x70\xd6\xd3\xb8\x00\x00\x00")

func _lgraphqlAddgroupstoprojectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddgroupstoprojectGraphql,
		"_lgraphql/addGroupsToProject.graphql",
	)
}

func _lgraphqlAddgroupstoprojectGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddgroupstoprojectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addGroupsToProject.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddnotificationemailGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x89\xa4\xe6\x26\x66\xe6\x38\xa6\xa4\x14\xa5\x16\x17\xc3\x65\x34\x15\xaa\xb9\x14\x14\x14\x14\x12\x53\x52\xfc\xf2\x4b\x32\xd3\x32\x93\xc1\x66\xb8\x82\xd4\x6a\x64\xe6\x15\x94\x96\x58\x41\x55\x28\x28\x40\x8c\x04\x9b\xac\x03\x15\x42\x35\x13\xc5\x0a\xb0\x8a\x5a\x4d\xb8\xee\xcc\x14\x24\x63\x20\x92\x5c\x20\x0c\x08\x00\x00\xff\xff\x7d\x3b\x64\xad\xb7\x00\x00\x00")

func _lgraphqlAddnotificationemailGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationemailGraphql,
		"_lgraphql/addNotificationEmail.graphql",
	)
}

func _lgraphqlAddnotificationemailGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationemailGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationEmail.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddnotificationmicrosoftteamsGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x89\x94\xa7\x26\x65\xe4\xe7\x67\xc3\x05\x35\x15\xaa\xb9\x14\x14\x14\x14\x12\x53\x52\xfc\xf2\x4b\x32\xd3\x32\x93\xc1\xda\x7d\x33\x93\x8b\xf2\x8b\xf3\xd3\x4a\x42\x52\x13\x73\x8b\x35\x32\xf3\x0a\x4a\x4b\xac\xa0\x4a\x15\x14\x20\xc6\x82\x4d\xd7\x81\x0a\xc1\xcd\x85\xd9\x00\x16\xaf\xd5\x84\xeb\xc9\x4c\x41\xd2\x0c\x91\xe4\x02\x61\x40\x00\x00\x00\xff\xff\x97\x56\x46\x93\xb1\x00\x00\x00")

func _lgraphqlAddnotificationmicrosoftteamsGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationmicrosoftteamsGraphql,
		"_lgraphql/addNotificationMicrosoftTeams.graphql",
	)
}

func _lgraphqlAddnotificationmicrosoftteamsGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationmicrosoftteamsGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationMicrosoftTeams.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddnotificationrocketchatGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x31\x0e\xc2\x30\x0c\x45\xf7\x9c\xe2\x23\x31\xb4\x52\x4f\xd0\x95\x9d\x01\x4e\x60\x92\x40\xac\x52\x1b\x21\x57\x0c\x88\xbb\xa3\xa6\x49\x04\x83\x97\xf7\xad\xf7\xe6\xc5\xc8\x58\x05\x9d\x03\xf6\x42\x73\x1c\x71\xb6\x27\xcb\x6d\x37\xac\xc4\x27\x12\x89\xf7\x7f\xf8\x8a\x97\xa4\x3a\x35\xd8\xe3\xed\x00\x80\x42\x38\xaa\xf1\x95\x7d\x76\x9e\xd4\x4f\xd1\x0e\x89\xac\x63\x79\x2c\x36\x96\x37\x60\xeb\xe4\xdc\x50\x50\x0b\xd5\x64\x1d\x5a\xac\x66\x33\xff\xf4\x4d\xc6\xe1\xc7\xba\x8d\x6e\xbd\x6f\x00\x00\x00\xff\xff\x53\x0f\xa2\x30\xdb\x00\x00\x00")

func _lgraphqlAddnotificationrocketchatGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationrocketchatGraphql,
		"_lgraphql/addNotificationRocketChat.graphql",
	)
}

func _lgraphqlAddnotificationrocketchatGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationrocketchatGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationRocketChat.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddnotificationslackGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x41\x0e\x82\x40\x0c\x45\xf7\x73\x8a\x6f\xe2\x02\x12\x4e\xc0\x21\xdc\x70\x82\x3a\x33\x4a\x03\xb4\xc6\x94\xb8\x30\xde\xdd\x30\x30\x8d\x2e\xba\x79\xbf\x79\x6f\x59\x8d\x8c\x55\xd0\x04\xe0\x2c\xb4\xe4\x1e\x83\x3d\x59\xee\xa7\x6e\x23\x71\x24\x91\x3c\xff\xc3\x57\xbe\x8e\xaa\x93\xc3\x16\xef\x00\x00\x94\xd2\x45\x8d\x6f\x1c\x8b\x73\x98\x29\x4e\x0d\xcb\x63\xb5\xfe\xf8\x00\xf6\x44\x29\x75\x07\xf2\x46\xad\xd5\xc1\x3b\xb5\x58\xf8\xa7\x75\x19\xa7\x1f\xeb\x3e\x86\xed\xbe\x01\x00\x00\xff\xff\xd9\x6e\xb4\xda\xd6\x00\x00\x00")

func _lgraphqlAddnotificationslackGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationslackGraphql,
		"_lgraphql/addNotificationSlack.graphql",
	)
}

func _lgraphqlAddnotificationslackGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationslackGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationSlack.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddnotificationtoprojectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x29\x28\xca\xcf\x4a\x4d\x2e\xb1\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x01\x09\xe6\xe5\x97\x64\xa6\x65\x26\x83\x95\x85\x54\x16\xa4\x5a\x29\xf8\xa1\x89\x60\xaa\xf3\x4b\xcc\x4d\x85\x9b\xa2\xa9\x50\xcd\xa5\xa0\xa0\xa0\x90\x98\x92\x82\xa2\x33\x3f\x00\x62\x9d\x46\x66\x5e\x41\x69\x89\x15\x54\x95\x82\x02\xdc\x15\x30\xf7\x40\xc5\x31\x1d\x82\xe1\x36\x2c\x2a\x21\x4e\xc1\x70\x1d\x58\x65\xad\x26\xdc\xd2\xcc\x14\x98\x5e\xb8\x24\x17\x08\x03\x02\x00\x00\xff\xff\x5d\xba\xcd\xcd\x21\x01\x00\x00")

func _lgraphqlAddnotificationtoprojectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddnotificationtoprojectGraphql,
		"_lgraphql/addNotificationToProject.graphql",
	)
}

func _lgraphqlAddnotificationtoprojectGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddnotificationtoprojectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addNotificationToProject.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddopenshiftGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xd0\xbf\x6e\x83\x30\x10\x06\xf0\x9d\xa7\xb8\x46\x19\x9a\xa1\x51\x3b\x55\x62\xad\xaa\xfe\x19\x9a\x48\x69\xba\x5b\xe1\x08\x6e\xe1\x4c\xcf\xc7\x84\x78\xf7\xca\x70\x24\x86\x74\x09\x03\xc2\xdf\x99\x93\xbe\x5f\xd5\x88\x11\xeb\xe8\x36\x01\x58\xda\x2c\x85\x37\x92\xf0\x49\xa6\xc2\x14\x76\xc2\x96\x8e\x37\x21\x38\x38\xf2\xae\xc4\x3d\x97\x93\x58\xdc\x0f\xd2\x98\x84\x80\x5d\x23\xc8\x5b\x23\x82\x3c\x19\xd4\xec\xbe\xf1\x20\x7b\x8f\x1c\xc7\xde\x17\xaf\xce\xcb\x2c\xda\x3a\x8e\xa3\xb6\xbd\x03\x9b\x83\xa9\xed\x17\xf2\x0b\xa3\x11\xe4\xcf\xc2\xd0\x86\x9f\x7f\x1b\x53\xc2\x1a\x16\x0f\xeb\xc7\xf5\xfd\x02\xba\x2e\x01\xa8\x1c\x59\x71\xe1\xdf\x27\x47\xb9\x3d\xa6\xf0\xbe\xdb\x7c\xe8\x1e\xa4\x2c\xdc\x5a\x41\x9b\x00\x98\x2c\xdb\xd4\x48\xbe\xb0\xb9\x04\x02\x00\x4b\x75\x23\x69\x3f\xec\x8f\x59\x1a\x5c\xf4\x34\xa8\xf4\x38\x9a\xc4\x2c\x91\x91\x4e\x55\x67\x50\xd2\x6c\x06\x34\x05\xd3\x3b\x13\xab\x58\x4e\xe7\x27\xb4\x91\xef\x9c\x0f\x72\xa3\xa1\xe6\x57\xfa\x85\xe7\xd2\x70\x39\x8f\xa2\xe5\x8a\x1a\x8e\xe1\xbd\x52\x3f\x85\x3b\x79\xcd\x80\x2e\xab\xcf\xab\xc6\xf5\xe2\x4a\x87\xbe\xc3\xb0\xfd\x8c\x7b\x75\xcd\x7f\x1b\x4d\xfa\x74\x49\xf7\x17\x00\x00\xff\xff\xe6\x9b\x6c\x3a\x23\x03\x00\x00")

func _lgraphqlAddopenshiftGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddopenshiftGraphql,
		"_lgraphql/addOpenshift.graphql",
	)
}

func _lgraphqlAddopenshiftGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddopenshiftGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addOpenshift.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddorupdateenvironmentGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcd\x4a\xc5\x30\x10\x85\xf7\x7d\x8a\x11\x5c\xdc\x0b\xf7\x09\xb2\x14\x0b\xba\x51\xf1\xe7\x01\x82\x99\x6a\xa4\x9d\x84\x74\x5a\x28\xe2\xbb\x4b\x9b\x26\x9d\xf4\x76\x51\x28\xe7\x9c\xcc\xcc\xf9\xba\x81\x35\x5b\x47\x70\xaa\x00\x6e\x49\x77\xa8\xe0\x8d\x83\xa5\xaf\x9b\xcb\xac\xf8\xe0\x7e\xf0\x93\x15\x3c\x12\x47\xc5\xa0\x6f\xdd\xf4\x3e\x79\x54\x70\x9f\xff\xa5\x77\xa7\x7b\x7c\xc5\xa6\x1c\x14\xad\x07\xd4\x46\x58\x72\xa0\xe5\x16\x0b\x1d\x69\xb4\xc1\x51\x87\xc4\x71\x5b\x4d\xe3\xb6\xca\x79\xa4\xfe\xdb\x36\xfc\x12\x2f\x7c\x92\xa7\x9f\xe1\xb7\x02\x00\xd0\xc6\x3c\x87\x0f\x6f\x34\x63\xbd\x4d\x3b\x59\xf2\x03\xab\x35\x03\x10\x5b\x2f\xe5\x2f\xab\x94\x6b\x27\x00\xc9\x90\xed\x05\x8a\xd2\xce\x00\x4a\x20\x65\x28\xa3\x28\xd1\xec\x16\x45\x2a\x92\x51\x0a\x5c\xe1\xd9\x03\x4b\xc1\x63\x52\x87\x00\x97\x17\x7f\xe7\x4c\xc6\x1a\x81\x28\x9a\xd5\xfc\xfd\x07\x00\x00\xff\xff\x2f\xb0\x49\x31\x36\x02\x00\x00")

func _lgraphqlAddorupdateenvironmentGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddorupdateenvironmentGraphql,
		"_lgraphql/addOrUpdateEnvironment.graphql",
	)
}

func _lgraphqlAddorupdateenvironmentGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddorupdateenvironmentGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addOrUpdateEnvironment.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddprojectGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4b\x6e\x2a\x31\x10\x45\xe7\xac\xc2\x48\x6f\x00\x12\x2b\x60\xfa\x92\x01\x4a\x06\x28\x24\x0b\x30\xed\x02\x9c\xd8\xae\x8e\x5d\x6e\x09\x45\xd9\x7b\xd4\x1f\xff\xc0\xf4\xa0\x27\xf7\x56\xb5\xac\x3a\x47\x7b\xe2\x24\xd1\xb0\xd5\x82\xb1\x7f\x86\x6b\xd8\xb2\x03\x59\x69\xce\xcb\x4d\x9f\x9c\x25\x7d\x58\x55\x66\xce\x1f\x4f\xa8\x04\xd8\x10\x0f\x29\xb6\x60\xdc\x45\x9e\x68\xcb\x76\x86\x96\x65\xb6\xb7\xf8\x09\x0d\xed\x39\x11\x58\x53\xec\xf1\x86\x64\x07\x87\xab\x23\xd0\xee\x09\x5a\x85\xd7\xc7\xfd\xde\xa2\x46\x82\xc7\x03\x6f\xa0\xb1\x9b\xe9\xdf\xb9\xfb\x2a\xda\xa3\xe5\xa6\xb9\x80\x2b\xc2\xd6\x2b\x65\xe1\xdb\x83\xa3\x9b\xc2\xa2\xf0\x4d\x7f\xb0\x67\xd3\x49\x8b\x46\x83\xa1\xf2\x3a\xdc\x13\xee\x84\x82\xe1\x0c\xe3\xbd\x08\x2d\x3f\xc3\x7f\xae\x9a\x14\x0a\xe8\x40\x61\xdb\xef\x67\xbf\x72\xaf\x52\x4b\x4a\x53\xad\x95\x1d\x27\x78\x81\x78\x93\x35\xfb\x59\x30\xc6\x18\x17\x62\x3a\xea\x4a\x9a\xd6\xd3\x76\xca\x19\x1b\x21\x0e\x2c\x37\x53\x14\x28\x4e\x38\x43\x9c\x81\x4c\x50\x43\x99\xf1\x4c\x1c\xef\xca\x5b\xb0\x8f\x90\x87\xc5\x2a\xed\x9a\x03\xd5\x85\x88\xbf\x6a\x45\x75\x25\x08\x51\xd3\xa4\xba\x30\x1a\x72\x6f\x4d\x18\x4e\xc2\x44\x77\x42\x55\x6a\x53\x58\x14\x47\xea\x02\xd5\xc5\x8a\xef\x8b\x4a\x45\xbb\x22\xc2\xdc\xad\xdc\xb4\x30\x30\xef\xd9\xac\x86\xe9\xcd\x49\xc2\xcc\xc8\xa1\xfd\x5d\x47\xef\xa4\xc8\x04\x1c\xcb\x45\xff\xfd\x05\x00\x00\xff\xff\xd3\x71\xbe\x59\x63\x04\x00\x00")

func _lgraphqlAddprojectGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddprojectGraphql,
		"_lgraphql/addProject.graphql",
	)
}

func _lgraphqlAddprojectGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddprojectGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addProject.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddprojecttobillinggroupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x49\x2f\xca\x2f\x2d\xb0\x52\x70\x07\x51\x9e\x79\x05\xa5\x25\x8a\x3a\x20\xe1\x82\xa2\xfc\xac\xd4\xe4\x12\x2b\x85\x00\x08\x03\x22\xa5\xa9\x50\xcd\xa5\xa0\xa0\xa0\x90\x98\x92\x02\x15\x0f\xc9\x77\xca\xcc\xc9\xc9\xcc\x4b\x07\x1b\xa0\x91\x09\x52\x66\x05\x55\xa5\xa0\x00\x35\x1c\x62\x89\x0e\x54\x10\x6e\x34\xcc\x12\xb0\x78\xad\x26\x5c\x57\x66\x0a\x94\x91\x97\x98\x9b\x0a\x91\xe4\x02\x61\x40\x00\x00\x00\xff\xff\x98\x52\x69\x5c\xb9\x00\x00\x00")

func _lgraphqlAddprojecttobillinggroupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddprojecttobillinggroupGraphql,
		"_lgraphql/addProjectToBillingGroup.graphql",
	)
}

func _lgraphqlAddprojecttobillinggroupGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddprojecttobillinggroupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addProjectToBillingGroup.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddsshkeyGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\x11\x3c\xb4\xe0\x17\xf4\xee\xc9\xa3\xe2\x7d\x21\x41\x17\x9b\x58\xda\xe4\x50\x24\xff\x2e\xe9\xa6\x59\xc1\x53\xc2\x9b\x61\xdf\xf8\x14\x29\xf2\x3b\xa0\x33\xc0\x31\x90\x77\x03\xae\x71\xe6\xf0\x38\x9c\x0a\x79\xb9\xf5\x4e\x63\xfa\xa7\xb7\x75\x2a\x70\x79\x5e\xe4\x2f\x41\x5a\xdc\x7c\xf6\xc4\x63\xeb\xf7\xf8\x18\x00\x20\x6b\xa5\xdc\x71\x98\x52\x1c\x2a\x06\xc4\xb9\xa9\x2b\x51\x67\xd3\x6b\x22\xde\x7d\x41\xe5\x45\xab\x17\x01\x27\x13\x74\x4e\x4d\xf2\xf6\xe6\xbe\x55\xd9\xfe\xac\x30\x7b\x25\x9b\x6f\x00\x00\x00\xff\xff\xbf\xff\xb7\x89\x17\x01\x00\x00")

func _lgraphqlAddsshkeyGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddsshkeyGraphql,
		"_lgraphql/addSshKey.graphql",
	)
}

func _lgraphqlAddsshkeyGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddsshkeyGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addSshKey.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAdduserGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\x78\x48\x0c\xad\xc4\x09\x7a\x08\x16\xc4\x01\x2c\x12\x90\xa5\xda\x45\xa9\x3b\x21\xee\x8e\xda\x3a\x69\x06\x06\x2f\xff\x1b\x3e\xcb\x62\x64\x3c\x29\xba\x00\x9c\x93\x10\x8f\x03\x6e\x96\x59\x5f\xa7\xcb\x9a\x9e\x9c\x67\xbb\x92\xa4\x92\xb7\x3a\xd2\x9f\xf8\x98\x44\x92\x5a\x69\x3d\x3e\x01\x00\x28\xc6\xfb\x9c\x72\xc7\xfa\x5e\x6c\xf0\x08\xb8\xb5\x9b\xde\x1a\xec\x80\x7d\x3b\xc8\xaa\xfb\x52\xdd\xf2\xc1\xd6\xbf\x7d\xa5\x38\xb6\xe6\xbe\x86\xf5\x7e\x01\x00\x00\xff\xff\xf7\xf8\x9f\x0d\xfe\x00\x00\x00")

func _lgraphqlAdduserGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAdduserGraphql,
		"_lgraphql/addUser.graphql",
	)
}

func _lgraphqlAdduserGraphql() (*asset, error) {
	bytes, err := _lgraphqlAdduserGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addUser.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAddusertogroupGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbd\x0a\xc3\x30\x0c\x84\xf7\x3c\xc5\x05\x3a\x24\xd0\x27\xf0\x5e\xba\x75\xe8\xcf\x03\x18\x6c\x82\x20\xb6\x83\x62\x4f\x21\xef\x5e\xa4\xb8\xf1\xd2\x41\x20\xee\x8e\xfb\x2e\x94\x6c\x33\xa5\x88\xa1\x03\x2e\x65\xf5\x7c\x0b\x96\x66\x83\x57\x66\x8a\x53\x7f\x15\x79\xe2\x54\x96\x87\x0d\xfe\x8f\xfc\x4c\xb3\x37\xb8\xff\xde\x7e\xc4\xd6\x01\x80\x75\xee\xb3\x7a\x7e\x27\xb5\x06\x8a\x4b\xc9\xa6\x7a\x80\x80\x0c\x36\xf8\x03\xd6\xc0\xd8\x6b\x42\xcb\x25\x12\x95\xdb\x36\x9c\x09\x56\x72\x5b\xa1\xf2\x3e\x9e\x0c\x72\xf5\x91\x86\xc3\xec\xe4\xbe\x01\x00\x00\xff\xff\x00\xb0\x61\x57\xf3\x00\x00\x00")

func _lgraphqlAddusertogroupGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAddusertogroupGraphql,
		"_lgraphql/addUserToGroup.graphql",
	)
}

func _lgraphqlAddusertogroupGraphql() (*asset, error) {
	bytes, err := _lgraphqlAddusertogroupGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/addUserToGroup.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAllenvironmentsGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\xd4\x50\x29\xa9\x2c\x48\xb5\x52\x70\xcd\x2b\x0b\xa9\x2c\x48\xd5\x54\xa8\xe6\x52\x50\x48\xcc\xc9\x71\xcd\x2b\xcb\x2c\xca\xcf\xcb\x4d\xcd\x2b\x29\xd6\x80\x28\x01\xab\x84\x28\x50\x50\xd0\xd3\xd3\x73\x44\x55\xc5\xa5\xa0\x50\xcb\x55\xcb\x05\x08\x00\x00\xff\xff\x55\x11\xba\xff\x56\x00\x00\x00")

func _lgraphqlAllenvironmentsGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAllenvironmentsGraphql,
		"_lgraphql/allEnvironments.graphql",
	)
}

func _lgraphqlAllenvironmentsGraphql() (*asset, error) {
	bytes, err := _lgraphqlAllenvironmentsGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/allEnvironments.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlAllopenshiftsGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8c\xb1\xce\x82\x40\x10\x84\x7b\x9e\x62\x43\xff\x93\xdf\xca\x07\x30\x46\x3b\x28\xc4\xfe\x02\x0b\x9c\x1e\xbb\xb0\xb7\x14\x86\xdc\xbb\x9b\xec\x45\x2b\xab\xf9\x66\x32\x33\xeb\x86\xf2\x02\x17\x42\xbd\x20\xc5\xc9\x0f\x1a\x61\x2f\xe0\x47\x02\xe0\x7b\x13\x72\x33\x1a\x74\x4c\x91\x03\xb6\x12\xcc\x0a\x6f\x8a\xd2\x38\x55\x14\xb2\x64\x11\x7e\x60\xa7\x6d\x44\x31\x1f\xe3\x74\xe5\xa8\x1f\x6e\x58\x32\x77\x82\x4e\x31\xbf\x2b\x3f\x31\xaf\xf7\xfd\x0f\xfc\x00\x6e\xf1\x77\x94\x8b\x55\xe4\x36\x39\xaa\xe5\xbc\x6e\x2e\x40\x05\xe5\xa1\x3a\x56\xff\x25\xa4\x64\x83\x99\xc9\x2b\x8b\xa7\xf1\xc4\x34\xf8\xf1\xfb\x82\xd4\xe7\x4e\x2a\xd2\x3b\x00\x00\xff\xff\x73\x5b\x50\x20\xf1\x00\x00\x00")

func _lgraphqlAllopenshiftsGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlAllopenshiftsGraphql,
		"_lgraphql/allOpenshifts.graphql",
	)
}

func _lgraphqlAllopenshiftsGraphql() (*asset, error) {
	bytes, err := _lgraphqlAllopenshiftsGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/allOpenshifts.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeleteopenshiftGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\xd3\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xd4\x54\xa8\xe6\x52\x50\x48\x49\xcd\x49\x2d\x49\xf5\x2f\x48\xcd\x2b\xce\xc8\x4c\x2b\xd1\xc8\xcc\x2b\x28\x2d\xb1\x52\xa8\x56\x80\xa8\x05\x6b\x51\xa8\xd5\xe4\xaa\x05\x04\x00\x00\xff\xff\x81\x2c\x74\x4c\x46\x00\x00\x00")

func _lgraphqlDeleteopenshiftGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeleteopenshiftGraphql,
		"_lgraphql/deleteOpenshift.graphql",
	)
}

func _lgraphqlDeleteopenshiftGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeleteopenshiftGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deleteOpenshift.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeployenvironmentbranchGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8d\xc1\x0a\xc2\x30\x10\x44\xef\xf9\x8a\x11\x3c\xb4\xe0\x17\xe4\x28\x78\xf5\xe2\x17\xc4\x1a\x34\x62\x66\xc3\xb2\x15\x44\xfa\xef\x62\x93\xf4\xb4\xcc\xdb\xc7\x4c\x9e\x2d\x58\x12\x62\x70\xc0\xbe\xa8\x3c\xe3\x64\x1e\x17\xd3\xc4\xfb\xee\x80\x3f\xbd\x6a\xe0\xf4\xd8\xe0\x88\xaf\x03\x80\x5b\x2c\x2f\xf9\x9c\xf8\x4e\x2a\xcc\x91\x76\x5c\xbd\x21\xb1\xcc\xe6\x9b\x04\xf4\xce\x9e\x01\x86\x1c\xfd\x36\xd6\xf0\xd2\x6e\x1d\x3b\x57\xa5\x06\xd7\xff\xa3\x5b\x7e\x01\x00\x00\xff\xff\xd0\x83\x6d\x47\xb0\x00\x00\x00")

func _lgraphqlDeployenvironmentbranchGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentbranchGraphql,
		"_lgraphql/deployEnvironmentBranch.graphql",
	)
}

func _lgraphqlDeployenvironmentbranchGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentbranchGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentBranch.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeployenvironmentlatestGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x2d\x2d\x49\x2c\xc9\xcc\xcf\x53\xd0\xe0\x52\x50\x50\x49\xcd\x2b\xcb\x2c\xca\xcf\xcb\x4d\xcd\x2b\xb1\x52\x70\x45\x70\x3c\xf3\x0a\x4a\x4b\x14\x35\x15\xaa\xb9\x14\x14\x14\x14\x52\x52\x0b\x72\xf2\x2b\x91\xa4\x7d\x12\x4b\x52\x8b\x4b\x34\x32\x41\xaa\xac\xa0\x8a\x14\x14\x50\x0c\x43\x36\x1a\x2c\x5f\xcb\xa5\xa0\xa0\xc9\x55\x0b\x08\x00\x00\xff\xff\xf9\xb6\x5a\x4e\x80\x00\x00\x00")

func _lgraphqlDeployenvironmentlatestGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentlatestGraphql,
		"_lgraphql/deployEnvironmentLatest.graphql",
	)
}

func _lgraphqlDeployenvironmentlatestGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentlatestGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentLatest.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeployenvironmentpromoteGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x4d\x0a\xc2\x30\x10\x46\xf7\x39\xc5\x27\xb8\x68\xc1\x13\x64\xef\x5e\xf0\x04\xa5\x1d\x24\x62\x66\x42\x3a\x11\x44\x7a\x77\xf1\x27\x51\xdb\x74\x15\xc8\x7b\x2f\xc9\xc4\x27\xed\xd4\x09\xa3\x31\xc0\x36\x44\x39\x53\xaf\x16\x47\x8d\x8e\x4f\x9b\x1d\x9e\xbb\xa3\xa4\xd8\xd3\x9e\xaf\x2e\x0a\x7b\xe2\x39\x1f\x68\x54\xc7\xaf\x63\x6a\x52\x8b\xbb\x01\x80\x81\xc2\x45\x6e\x3f\xc6\x21\x8a\x17\xa5\xc6\x71\x48\x6a\xdf\x12\xb0\xbc\x2d\x13\x80\x3b\x4f\xb6\xf2\xa0\x22\xe4\x01\xbe\x49\x89\x3e\xa8\x80\xc9\xfc\xaf\xcb\xb4\x1a\x66\x7d\x6d\xe8\x95\xdf\x30\xb9\x6d\xcd\xf4\x08\x00\x00\xff\xff\xcd\xcf\x66\xc3\x74\x01\x00\x00")

func _lgraphqlDeployenvironmentpromoteGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentpromoteGraphql,
		"_lgraphql/deployEnvironmentPromote.graphql",
	)
}

func _lgraphqlDeployenvironmentpromoteGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentpromoteGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentPromote.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlDeployenvironmentpullrequestGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\xaf\xc4\xa2\x95\x7a\x02\x2f\x91\x58\x74\x83\x2a\x38\x81\x9b\x0c\xc4\xc8\x1e\x07\x67\x8c\x84\x50\xee\x8e\x12\x3b\xd0\x38\xca\xce\xfe\xff\x8d\x35\xcf\x3e\x89\x11\x1b\x18\x47\x05\x3c\xf4\x31\x7c\x50\x23\x1a\xd7\x7c\xb8\x70\x9f\xe4\x70\xc6\xd4\x71\xf2\x37\x8a\x1a\x17\x96\xc3\x79\x0a\xc4\x8a\x23\x8d\x57\x89\x96\xdf\x73\x74\x33\x03\x3d\x46\xc3\x4d\xf7\x6c\xfc\x6e\xf7\x42\x6f\xeb\xaa\x23\xd3\xee\x8d\xfd\x77\xf7\x63\x27\xfc\x28\x00\x68\xa9\x77\xe1\xfb\x89\xbf\x6c\x0c\xec\x89\xe5\x9a\x9c\x8b\xf4\x99\x68\x90\xa3\x9d\xb6\xd7\x85\x04\xfe\xe4\x16\xcd\x92\x2f\x62\xc5\xb0\xa4\xc5\x2e\x5b\x96\xac\xd6\xab\x7c\x37\xd4\xbc\xf1\x5a\xbc\x30\xb5\x71\xf5\x05\x1b\x2a\xbf\xb4\xba\xcf\xcc\xa8\x80\x93\x1a\x7f\x03\x00\x00\xff\xff\xe3\x61\x7b\xa7\xc6\x01\x00\x00")

func _lgraphqlDeployenvironmentpullrequestGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlDeployenvironmentpullrequestGraphql,
		"_lgraphql/deployEnvironmentPullrequest.graphql",
	)
}

func _lgraphqlDeployenvironmentpullrequestGraphql() (*asset, error) {
	bytes, err := _lgraphqlDeployenvironmentpullrequestGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/deployEnvironmentPullrequest.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlEnvironmentbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x4d\x0e\x82\x30\x10\x85\xf7\x9c\xe2\x91\xb8\x80\x84\x13\xb0\x74\xe7\x86\x98\xe8\x05\x08\x1d\xb5\x06\xa6\xb5\x0c\x26\x0d\xf1\xee\x86\x1f\x5b\x70\xd1\xb4\xdf\xd7\xce\xeb\x7b\x0d\xe4\x3c\xb2\x04\x38\x70\xdd\x51\x89\x8b\x38\xcd\xf7\xb4\x98\x8c\x75\xe6\x49\x8d\x94\x38\xb1\xa4\x39\xc6\x04\x00\x88\xdf\xda\x19\xee\x88\xe5\xe8\xab\xba\xa3\x6c\xd6\xc0\x32\x3f\xc7\x14\xab\x0a\x01\xbf\xa8\x7c\xbd\x18\xd7\x1d\xd0\x2a\x1c\xa7\xc9\x00\xce\x0c\xf2\x47\x7d\x40\x45\xb6\x35\xfe\xea\x6d\x7c\xb1\xa9\xb5\xf3\xc6\x12\xf7\x0f\x7d\x93\xf3\xd2\xa0\xda\x7e\x32\x58\x55\x0b\xc5\x06\x8d\xa3\x1d\x2b\x6a\x29\xf2\x27\x99\xd6\x37\x00\x00\xff\xff\xd5\xce\x35\x6e\x32\x01\x00\x00")

func _lgraphqlEnvironmentbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlEnvironmentbynameGraphql,
		"_lgraphql/environmentByName.graphql",
	)
}

func _lgraphqlEnvironmentbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlEnvironmentbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/environmentByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlEnvironmentbyopenshiftprojectnameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xd0\xe0\x52\x50\x50\x50\x50\xc9\x2f\x48\xcd\x2b\xce\xc8\x4c\x2b\x09\x28\xca\xcf\x4a\x4d\x2e\xf1\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xe4\xd2\x54\xa8\x06\x2b\x4b\xcd\x2b\xcb\x2c\xca\xcf\xcb\x4d\xcd\x2b\x71\xaa\xf4\xc7\xa2\x05\x62\x1a\x08\x60\x37\x10\xab\x3d\x60\x3d\x30\x2b\x40\x40\x4f\x4f\xcf\x95\x90\x4d\x60\xc5\xb5\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xc1\x6d\x4e\x44\xc7\x00\x00\x00")

func _lgraphqlEnvironmentbyopenshiftprojectnameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlEnvironmentbyopenshiftprojectnameGraphql,
		"_lgraphql/environmentByOpenshiftProjectName.graphql",
	)
}

func _lgraphqlEnvironmentbyopenshiftprojectnameGraphql() (*asset, error) {
	bytes, err := _lgraphqlEnvironmentbyopenshiftprojectnameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/environmentByOpenshiftProjectName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlFragmentsFragmentminimalallenvironmentsGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x5d\x8a\xc3\x30\x0c\x84\xdf\x73\x0a\x5d\x65\x17\x16\x76\x5f\x96\x52\x92\x03\x98\x58\x49\x5d\x14\xc9\xc8\x4a\x21\x94\xdc\xbd\xd4\xce\x8f\xfb\xe4\x6f\x06\xc6\xa3\x19\xd4\x8d\x13\xb2\xc1\x17\xd1\x0f\x3f\x82\x0a\xbf\x65\x02\x61\xa8\x34\x3c\x1b\x00\x80\xe0\xf3\xc3\x6e\xc2\x0c\x1e\x23\xc9\xd2\x2e\xb1\x96\xdf\x2e\xe1\x15\x87\xca\xf9\x45\xe7\x3f\x9d\x36\x18\x95\x0c\x9e\x25\xc7\x3f\x12\x91\xd3\x2d\x0c\x76\x51\xb9\x63\x6f\xff\x7b\x9f\x9b\x4d\xfe\xfc\x96\xec\x15\x9d\x61\xb9\x68\x8e\xfe\x60\x8f\x84\x3b\xab\xcc\x86\x27\xa5\x8c\x93\x70\x30\xd1\xc0\x63\xa7\x54\xac\x58\x8a\xb6\x99\xc7\xd0\x6a\x2a\xc0\x18\xac\x53\xca\x62\x6d\xd6\x57\x00\x00\x00\xff\xff\x72\x61\x35\x14\x39\x01\x00\x00")

func _lgraphqlFragmentsFragmentminimalallenvironmentsGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlFragmentsFragmentminimalallenvironmentsGraphql,
		"_lgraphql/fragments/fragmentMinimalAllEnvironments.graphql",
	)
}

func _lgraphqlFragmentsFragmentminimalallenvironmentsGraphql() (*asset, error) {
	bytes, err := _lgraphqlFragmentsFragmentminimalallenvironmentsGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/fragments/fragmentMinimalAllEnvironments.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlFragmentsFragmentminimalenvironmentbyopenshiftprojectnameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x61\x0a\xc2\x30\x0c\x85\xff\xef\x14\x39\xcb\x40\xd0\x3f\x2a\xb2\x1d\xa0\xac\xd9\xac\xb4\x49\xc9\x32\x61\xc8\xee\x2e\xb6\x73\xab\xe0\xaf\x7e\x79\x6d\xfa\xde\xeb\xc5\x0c\x01\x49\xe1\x40\x4f\x27\x4c\x1f\xae\xe7\x4b\x44\x1a\xef\xae\xd7\xab\xf0\x03\x3b\x3d\x9b\x80\xc0\x54\x3e\x82\x57\x05\x00\xe0\x6c\x3a\xc8\x04\x4c\x60\x31\x7a\x9e\x9b\x39\x96\x63\x6d\x46\xbc\x61\x5f\x28\x47\x34\xf6\x57\x69\x9c\xfa\xbc\x83\xbb\xc9\xf6\x0f\xff\x09\x94\x2e\xcc\xa4\x7c\xb2\xeb\x66\x27\x68\x14\x73\xa2\x29\xda\x8d\x2d\x7a\xfc\xb2\xf0\xa4\xb8\xd3\x98\x30\x30\x39\x65\x71\x34\xb4\xe2\xb3\x14\xb3\xd1\x5a\x73\x2b\x5a\x54\x05\x18\x9c\xb6\xe2\xd3\xb0\x54\xcb\x3b\x00\x00\xff\xff\x4b\x01\x7b\x0c\x4b\x01\x00\x00")

func _lgraphqlFragmentsFragmentminimalenvironmentbyopenshiftprojectnameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlFragmentsFragmentminimalenvironmentbyopenshiftprojectnameGraphql,
		"_lgraphql/fragments/fragmentMinimalEnvironmentByOpenshiftProjectname.graphql",
	)
}

func _lgraphqlFragmentsFragmentminimalenvironmentbyopenshiftprojectnameGraphql() (*asset, error) {
	bytes, err := _lgraphqlFragmentsFragmentminimalenvironmentbyopenshiftprojectnameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/fragments/fragmentMinimalEnvironmentByOpenshiftProjectname.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlFragmentsFragmentminimalprojectbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xdd\x4a\x44\x31\x0c\x84\xef\xf7\x29\xfa\x2c\xa2\x17\x82\xc8\xc1\x9f\x07\xa8\xa7\xb3\xbb\xd1\x36\xa9\x69\x5a\x38\xc8\xbe\xbb\x6c\xbb\xca\x81\x5e\xb5\xf9\x02\x93\x99\x39\xaa\x3f\x25\xb0\xb9\x45\xe5\x13\xab\xdd\x6d\xcf\x3e\xc1\x09\xff\x01\xf7\x73\x70\xce\x39\x0a\xfd\x61\x9f\xd0\x3f\xbe\x9a\x3c\x86\x38\x86\x0f\xf5\xbc\x9e\x51\xfa\x90\x6b\x8c\x8a\xef\x8a\x62\x37\xa0\x12\xea\x6a\x24\xfc\xc0\x8d\x54\xf8\x7a\x6f\x88\xac\x46\x0d\xaf\x5b\x31\xa4\x72\x8f\x1c\x65\x9b\xf9\x9b\x2f\x5f\x33\x7d\x41\x92\x86\x99\x2f\x2a\x49\x6c\x2c\x24\x83\xcb\x99\x8e\x76\x8b\xb2\x78\x33\x28\xf7\x5d\x40\x43\x94\x7c\xb5\xb2\x73\x55\x9e\x28\xd1\xf0\x76\x22\x7b\xd7\x38\x67\xfd\x17\x1d\xbd\xec\xba\xb9\x1c\x2e\xbf\x01\x00\x00\xff\xff\xbf\xda\xc2\x79\x4e\x01\x00\x00")

func _lgraphqlFragmentsFragmentminimalprojectbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlFragmentsFragmentminimalprojectbynameGraphql,
		"_lgraphql/fragments/fragmentMinimalProjectByName.graphql",
	)
}

func _lgraphqlFragmentsFragmentminimalprojectbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlFragmentsFragmentminimalprojectbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/fragments/fragmentMinimalProjectByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlFragmentsFragmentprojectbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x6d\x6e\xdb\x30\x0c\xfd\xdf\x53\x08\x3d\x80\xb1\xed\x06\x6b\x57\x74\x43\xb7\x2c\x48\xb2\xfc\x2d\x18\x99\x8e\xb5\x48\xa2\x4b\xd1\x2e\x8c\x20\x77\x1f\x6c\xe7\xc3\x8e\x9c\xac\x40\x87\xf1\x47\x62\x3d\xca\xe4\xd3\x93\xf9\x32\x86\xb5\x43\x2f\x6a\xca\xf4\x1b\xb5\xdc\xd5\x13\x70\xa8\xc8\x1f\x00\xb5\xbd\x51\x4a\x29\x93\xb6\x7f\x1e\x1c\xb6\x0f\x50\x0a\x7d\x4b\x6d\xb7\x58\x31\x78\x9d\x63\x68\x17\x45\x69\x2d\xe3\x4b\x89\x41\xf6\x00\x9b\x0a\x04\x9f\xb0\xde\x2f\x29\x2d\xb5\x18\xf2\x0f\xbe\x32\x4c\xbe\x69\xdf\xd5\xd4\x62\x2a\x9c\xd7\x41\xd0\x85\x2f\x58\x58\xaa\x63\x7c\x01\x61\x13\xa3\x33\x74\x54\x61\x8c\x4f\x99\x1c\x49\x97\x08\x42\x0c\x6b\xbc\x07\xab\xdb\x35\x15\xe8\x43\x6e\x32\xd9\x9f\x74\x0a\x22\xc8\xbe\xcd\xa5\x58\xa1\xa5\xa2\xa1\xd6\x63\x19\xbe\x1b\x67\x3a\xae\x6b\x23\xbf\xd8\xc6\x52\xac\x99\xca\x22\x74\x9a\x35\x91\x24\x49\x23\xe6\x63\x03\xab\x13\xdc\xc4\xf3\xb3\xd4\x05\x1e\x15\x3d\x44\x04\x38\x74\x2b\xe4\x30\x7c\xb9\x89\x32\x20\xc7\x68\x13\xe8\xc0\xd8\xd1\x4c\x08\xf9\x13\xd6\x23\xc5\x2e\xb6\xef\xc7\x06\xeb\x45\x5d\x5c\xcd\x2f\xc1\x96\xe3\x1b\x76\xa3\x68\x66\x38\xc8\xe4\x52\x53\x0b\x17\x92\x71\x31\x26\x3b\xdc\x76\xda\x72\x7a\xda\x6e\x95\xc9\x14\x14\x66\x89\xfc\xc8\x08\x82\xbc\xc8\xc1\xff\xe4\x87\x97\x12\xac\x4a\xd4\xed\xc7\xe4\x53\xf2\xe1\x56\xed\x76\xe7\x57\x78\x67\xac\x35\x7e\xfd\x9e\x9b\xd4\x25\x33\x7a\x5d\x0f\xc0\x55\x57\x77\x4e\x99\xbc\x02\xe3\x38\x69\xf4\xe9\x81\x52\xf7\xeb\x49\x4c\x66\x34\x34\x73\x14\x54\xf4\xbd\x4d\x7a\xe9\xb9\x05\xbd\x79\x1b\xe3\x57\x5c\xe5\x44\x9b\xbf\x9c\x22\x07\xef\xd1\x8e\x10\x1d\x69\x3e\x23\xbd\x41\xb9\xcf\x41\xfe\x0b\x83\x77\xdc\x6f\x9f\xf5\x43\x33\x3f\x6f\x23\xdc\x8e\xda\xe7\x34\x65\x0c\xe1\x32\xeb\xab\xdd\x7e\x18\xcd\x14\x28\x93\x05\x82\x0b\xff\x48\xa7\xeb\x9f\xcf\xd1\xfb\x4e\xcd\xf6\x0e\xdf\xe5\xd1\x57\x4b\x60\x03\x2b\x8b\x7d\x42\x83\x0e\x41\x53\xcf\x0a\xaa\xe3\xdc\x1f\x2b\x1c\x6d\xf3\x52\x85\xb4\xf5\xf8\x81\xa3\x74\xd0\x1d\x04\x9c\x61\x76\x86\x7e\x45\x48\x63\x74\x61\xa4\x37\xf8\xbd\xb6\x83\xba\xe7\x66\x3f\x30\x95\x81\x83\x5f\x39\x7e\x74\x80\x58\x86\xa1\x14\x27\x39\x76\x37\xbb\x3f\x01\x00\x00\xff\xff\x7d\x90\x32\xd4\x6b\x07\x00\x00")

func _lgraphqlFragmentsFragmentprojectbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlFragmentsFragmentprojectbynameGraphql,
		"_lgraphql/fragments/fragmentProjectByName.graphql",
	)
}

func _lgraphqlFragmentsFragmentprojectbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlFragmentsFragmentprojectbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/fragments/fragmentProjectByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlLagoonschemaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xa8\xe6\x52\x50\x88\x8f\x2f\x4e\xce\x48\xcd\x4d\x04\x73\x14\x14\x4a\x2a\x0b\x52\x8b\xa1\x6c\x05\x85\xec\xcc\xbc\x14\x28\x33\x2f\x31\x37\x15\xca\x4c\xcb\x4c\xcd\x49\x29\xd6\xc8\xcc\x4b\xce\x29\x4d\x49\x75\x49\x2d\x28\x4a\x4d\x4e\x2c\x49\x4d\xb1\x2a\x29\x2a\x4d\xd5\x84\x6b\x46\xd1\x53\xcb\x05\x23\x6b\xb9\x6a\x01\x01\x00\x00\xff\xff\x29\x07\x39\xef\x7e\x00\x00\x00")

func _lgraphqlLagoonschemaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlLagoonschemaGraphql,
		"_lgraphql/lagoonSchema.graphql",
	)
}

func _lgraphqlLagoonschemaGraphql() (*asset, error) {
	bytes, err := _lgraphqlLagoonschemaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/lagoonSchema.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlLagoonversionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xa8\xe6\x52\x50\xc8\x49\x4c\xcf\xcf\xcf\x0b\x4b\x2d\x2a\xce\xcc\xcf\xe3\xaa\x05\x04\x00\x00\xff\xff\x42\xb4\x77\x45\x19\x00\x00\x00")

func _lgraphqlLagoonversionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlLagoonversionGraphql,
		"_lgraphql/lagoonVersion.graphql",
	)
}

func _lgraphqlLagoonversionGraphql() (*asset, error) {
	bytes, err := _lgraphqlLagoonversionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/lagoonVersion.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlMeGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xa8\xe6\x52\x50\x50\x50\xc8\x4d\x85\x32\x40\x20\x33\x05\xce\x4c\xcd\x4d\xcc\xcc\x81\xf3\xd2\x32\x8b\x8a\x4b\xfc\x12\x73\x53\xe1\x22\x39\x89\x68\x02\xc5\xc5\x19\xde\xa9\x95\xc5\x48\xa6\xa1\x99\x08\x02\x79\xc8\x3a\x40\x20\x3b\xb5\x32\xa4\xb2\x00\x43\x2c\x2c\x31\xa7\x14\x43\xd0\x2d\x33\x2f\x3d\xb5\xa8\xa0\x28\x33\xaf\x04\x45\x2a\xb9\x28\x35\xb1\x24\x15\x61\x51\x2d\x17\x84\xac\x05\x04\x00\x00\xff\xff\x19\x81\x0c\x89\xe8\x00\x00\x00")

func _lgraphqlMeGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlMeGraphql,
		"_lgraphql/me.graphql",
	)
}

func _lgraphqlMeGraphql() (*asset, error) {
	bytes, err := _lgraphqlMeGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/me.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlProjectbynameGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x2c\x4d\x2d\xaa\x54\xd0\xe0\x52\x50\x50\xc9\x4b\xcc\x4d\xb5\x52\x08\x2e\x29\xca\xcc\x4b\x57\xe4\xd2\xac\xe6\x52\x50\x28\x28\xca\xcf\x4a\x4d\x2e\x71\xaa\xf4\x4b\xcc\x4d\x05\x29\x82\xa8\x01\x2b\xe5\x52\x50\x00\xab\x51\x50\xd0\xd3\xd3\x0b\x40\x56\xc8\xa5\xa0\x50\xcb\x55\x0b\x08\x00\x00\xff\xff\xf2\x40\x7b\x58\x5a\x00\x00\x00")

func _lgraphqlProjectbynameGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlProjectbynameGraphql,
		"_lgraphql/projectByName.graphql",
	)
}

func _lgraphqlProjectbynameGraphql() (*asset, error) {
	bytes, err := _lgraphqlProjectbynameGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/projectByName.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlProjectsbymetadataGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xcd\x4e\x2b\x31\x0c\x85\xf7\xf3\x14\xbe\xd5\x5d\xd0\x4d\x05\x1b\x16\x5d\x22\x2a\x84\x04\xa2\xa2\x85\xbd\x99\x71\xdb\xd0\xfc\x4c\x1d\x67\xa4\x51\x94\x77\x47\xd3\x29\x49\x11\x25\x2b\xeb\x3b\xce\xf1\x91\x1d\x23\xa8\x0d\x60\xab\xde\x89\x1f\x98\x50\x88\xd7\x3b\xb4\x2f\xbc\x38\x04\xd4\x30\x83\xc9\xcd\xec\x76\x76\x3d\x81\x94\xaa\x43\x20\xee\xe1\xaa\x02\x00\xf8\xbf\xa7\x7e\x0e\x2b\x61\x65\xb7\xff\x46\xd2\xa1\x0e\xf4\xcd\xa6\xf1\x08\x5b\x76\x9f\x54\x8b\xbf\xeb\x9f\x49\xb0\x41\xc1\xf1\xfb\xf0\xcc\x89\xcc\x21\x66\x36\xbc\xa3\xf3\xe0\xff\x83\x9e\xdc\xc7\x29\x59\x49\xc7\x6a\x5a\x0c\x54\x93\x4b\x8b\xa6\x34\x62\x10\xf7\xd8\xe8\x02\x3e\x18\x6d\xbd\x23\x9f\x41\x1b\xb4\x66\x3a\x04\xf2\xe2\x7f\x65\x2c\x5d\xec\x9a\x50\x8b\x72\x76\x61\x3b\xc5\xce\x1a\xb2\x52\xa6\xd4\xa2\x3a\x5a\xf5\x5e\xc8\xf8\x7b\x6a\xb5\xeb\x2f\x6b\x6b\xf4\xfb\xcb\xca\x2b\x19\xd7\xd1\x65\x6d\xc9\xce\x38\x29\xa2\x6b\xc9\xfa\x9d\xda\xc8\x72\x5c\xf3\x12\x45\x88\x6d\xd6\x1b\xea\x48\xbb\x76\x88\x78\x96\xd6\x3f\x29\xa3\x4a\xe6\xad\x92\x37\xd6\x7f\x2f\x2a\x0f\x39\xbf\xd2\xd9\x9a\xc7\x13\xa4\x2a\x55\x31\x02\xd9\x06\x52\xfa\x0a\x00\x00\xff\xff\x00\x3e\xbb\x56\x55\x02\x00\x00")

func _lgraphqlProjectsbymetadataGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlProjectsbymetadataGraphql,
		"_lgraphql/projectsByMetadata.graphql",
	)
}

func _lgraphqlProjectsbymetadataGraphql() (*asset, error) {
	bytes, err := _lgraphqlProjectsbymetadataGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/projectsByMetadata.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlRemoveprojectmetadatabykeyGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x31\x0b\xc2\x30\x10\x85\xf7\xfc\x8a\x6b\x71\xb0\x4b\xd1\xc5\x21\xa3\x20\x22\x22\x0a\x8a\xfb\x61\x4e\x8d\x9a\xb4\x1e\x57\xa1\x84\xfc\x77\x69\x2a\x55\x6f\xba\xf7\xc1\xfb\x5e\x08\x60\xcf\x80\xb5\x3d\x12\x2f\x99\x50\x88\x0f\x57\xf4\x5b\x5e\x3c\x1b\x7c\x40\x09\xf9\xb4\x9c\x95\x93\x1c\x62\x54\xae\x11\x14\x5b\x79\x18\x2b\x00\x80\x91\x35\x1a\x56\x5e\xb2\x3e\xdd\xa9\xd5\xb0\x17\xb6\xfe\x92\x15\x21\x31\x26\x57\xbd\x68\xc7\xd5\x8d\x4e\xb2\x21\x41\x83\x82\xf3\x76\x4d\x6d\x6f\xe8\xce\xfa\xba\x11\x1d\x86\x9c\x98\xd1\x9d\xfd\x8f\x25\x7d\x37\x32\xd0\x98\xbe\xe2\x5b\xfd\x69\x78\x74\x34\x04\xf7\x59\x56\x7d\x2b\xaa\x10\x80\xbc\x81\x18\xdf\x01\x00\x00\xff\xff\x82\x2b\x13\x86\xfe\x00\x00\x00")

func _lgraphqlRemoveprojectmetadatabykeyGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlRemoveprojectmetadatabykeyGraphql,
		"_lgraphql/removeProjectMetadataByKey.graphql",
	)
}

func _lgraphqlRemoveprojectmetadatabykeyGraphql() (*asset, error) {
	bytes, err := _lgraphqlRemoveprojectmetadatabykeyGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/removeProjectMetadataByKey.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlUpdateopenshiftGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8c\xbf\x4e\xc3\x40\x0c\xc6\xf7\x3e\x85\x5b\x65\x28\x52\x89\x60\x42\xca\x8a\x10\x74\x6a\x06\xc2\x7e\x4a\x9c\xc6\x90\xd8\x87\xcf\x37\x45\xf7\xee\x28\x77\x80\xd4\xc9\x9f\xbf\x3f\xbf\x25\x9a\x33\x12\x3e\x56\x34\x34\x70\x66\xdb\x9f\xa0\xf2\xce\xfa\xa9\x81\xce\x0f\xce\xf0\xe2\x91\xc3\x44\xa3\xb5\x9b\x7b\x66\x1f\x6d\x7f\x07\xeb\x0e\x20\xde\xe6\x47\xda\xb2\x06\x56\xd8\x50\x15\x0d\x27\xf8\x05\x15\x20\xa4\x32\x03\xa0\x21\x1f\x76\x0b\x66\xd1\x0b\x07\x99\xb1\xd3\x39\xbf\x2a\xd1\x50\x5b\x67\x86\xca\xd9\xf1\x2a\x9f\xd8\x5b\x17\x50\xf3\x1f\xc2\xf4\x26\xc1\xfe\x74\x2b\x5a\x74\xaf\xe8\x0c\x0b\xdd\xe4\x0b\xcb\x7a\x5d\xef\x81\x46\x70\x9e\x3e\x50\x5f\x73\x45\xdf\x27\xc7\x17\x7d\xf9\x8e\x6e\x86\x1a\x0e\x8f\xf5\x53\xfd\x70\x80\x94\xf2\x60\x11\x26\x13\x25\xbe\x3e\x0b\x8f\x74\xfd\xa7\x20\x0f\xa5\x93\x76\xe9\x27\x00\x00\xff\xff\xca\x77\x14\x58\x3a\x01\x00\x00")

func _lgraphqlUpdateopenshiftGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlUpdateopenshiftGraphql,
		"_lgraphql/updateOpenshift.graphql",
	)
}

func _lgraphqlUpdateopenshiftGraphql() (*asset, error) {
	bytes, err := _lgraphqlUpdateopenshiftGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/updateOpenshift.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __lgraphqlUpdateprojectmetadataGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6e\xc2\x30\x10\x86\x77\x3f\xc5\x35\xea\xd0\x2c\x51\xbb\x74\xf0\x5e\x55\x1d\x2a\x90\x40\xec\xa7\xf8\x20\x86\xc4\x31\xd6\x19\x09\x59\x7e\x77\xe4\x38\x10\x2c\x6e\xf2\x7d\xe7\xbb\xff\x0b\x01\xf4\x1e\xd0\xea\x1d\xb9\x5f\x47\xc8\xe4\xb6\x1d\x9a\x95\xfb\x39\x7b\xec\xa1\x81\xea\xab\xf9\x6e\x3e\x2b\x88\x51\x0c\x9e\x91\xf5\x68\xe0\x43\x00\x00\xbc\x6b\x25\xe1\xcf\xf0\x5b\xee\x4e\x74\x95\xb0\x61\xa7\xcd\x61\x26\x17\xec\x3d\xdd\x59\x1d\x26\xe8\xad\x42\xa6\xb5\x1b\x8f\xd4\xf2\x3f\x31\x2a\x64\xcc\xf7\x52\x69\x63\x3d\xcb\xf0\xe8\x27\xa6\x64\xca\x2a\x98\x45\x6e\x3b\x09\xe5\xc7\x54\x93\x45\x72\x79\x99\xcc\x36\xd9\xaa\x98\x46\x51\xbe\xea\xe5\xec\x53\xac\xc1\x61\x59\x1b\x66\x73\x91\xb7\xa2\x08\x01\xc8\x28\x88\xf1\x16\x00\x00\xff\xff\xa5\x4e\x06\xe0\x51\x01\x00\x00")

func _lgraphqlUpdateprojectmetadataGraphqlBytes() ([]byte, error) {
	return bindataRead(
		__lgraphqlUpdateprojectmetadataGraphql,
		"_lgraphql/updateProjectMetadata.graphql",
	)
}

func _lgraphqlUpdateprojectmetadataGraphql() (*asset, error) {
	bytes, err := _lgraphqlUpdateprojectmetadataGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "_lgraphql/updateProjectMetadata.graphql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"_lgraphql/addBillingGroup.graphql":                                            _lgraphqlAddbillinggroupGraphql,
	"_lgraphql/addEnvVariable.graphql":                                             _lgraphqlAddenvvariableGraphql,
	"_lgraphql/addGroup.graphql":                                                   _lgraphqlAddgroupGraphql,
	"_lgraphql/addGroupsToProject.graphql":                                         _lgraphqlAddgroupstoprojectGraphql,
	"_lgraphql/addNotificationEmail.graphql":                                       _lgraphqlAddnotificationemailGraphql,
	"_lgraphql/addNotificationMicrosoftTeams.graphql":                              _lgraphqlAddnotificationmicrosoftteamsGraphql,
	"_lgraphql/addNotificationRocketChat.graphql":                                  _lgraphqlAddnotificationrocketchatGraphql,
	"_lgraphql/addNotificationSlack.graphql":                                       _lgraphqlAddnotificationslackGraphql,
	"_lgraphql/addNotificationToProject.graphql":                                   _lgraphqlAddnotificationtoprojectGraphql,
	"_lgraphql/addOpenshift.graphql":                                               _lgraphqlAddopenshiftGraphql,
	"_lgraphql/addOrUpdateEnvironment.graphql":                                     _lgraphqlAddorupdateenvironmentGraphql,
	"_lgraphql/addProject.graphql":                                                 _lgraphqlAddprojectGraphql,
	"_lgraphql/addProjectToBillingGroup.graphql":                                   _lgraphqlAddprojecttobillinggroupGraphql,
	"_lgraphql/addSshKey.graphql":                                                  _lgraphqlAddsshkeyGraphql,
	"_lgraphql/addUser.graphql":                                                    _lgraphqlAdduserGraphql,
	"_lgraphql/addUserToGroup.graphql":                                             _lgraphqlAddusertogroupGraphql,
	"_lgraphql/allEnvironments.graphql":                                            _lgraphqlAllenvironmentsGraphql,
	"_lgraphql/allOpenshifts.graphql":                                              _lgraphqlAllopenshiftsGraphql,
	"_lgraphql/deleteOpenshift.graphql":                                            _lgraphqlDeleteopenshiftGraphql,
	"_lgraphql/deployEnvironmentBranch.graphql":                                    _lgraphqlDeployenvironmentbranchGraphql,
	"_lgraphql/deployEnvironmentLatest.graphql":                                    _lgraphqlDeployenvironmentlatestGraphql,
	"_lgraphql/deployEnvironmentPromote.graphql":                                   _lgraphqlDeployenvironmentpromoteGraphql,
	"_lgraphql/deployEnvironmentPullrequest.graphql":                               _lgraphqlDeployenvironmentpullrequestGraphql,
	"_lgraphql/environmentByName.graphql":                                          _lgraphqlEnvironmentbynameGraphql,
	"_lgraphql/environmentByOpenshiftProjectName.graphql":                          _lgraphqlEnvironmentbyopenshiftprojectnameGraphql,
	"_lgraphql/fragments/fragmentMinimalAllEnvironments.graphql":                   _lgraphqlFragmentsFragmentminimalallenvironmentsGraphql,
	"_lgraphql/fragments/fragmentMinimalEnvironmentByOpenshiftProjectname.graphql": _lgraphqlFragmentsFragmentminimalenvironmentbyopenshiftprojectnameGraphql,
	"_lgraphql/fragments/fragmentMinimalProjectByName.graphql":                     _lgraphqlFragmentsFragmentminimalprojectbynameGraphql,
	"_lgraphql/fragments/fragmentProjectByName.graphql":                            _lgraphqlFragmentsFragmentprojectbynameGraphql,
	"_lgraphql/lagoonSchema.graphql":                                               _lgraphqlLagoonschemaGraphql,
	"_lgraphql/lagoonVersion.graphql":                                              _lgraphqlLagoonversionGraphql,
	"_lgraphql/me.graphql":                                                         _lgraphqlMeGraphql,
	"_lgraphql/projectByName.graphql":                                              _lgraphqlProjectbynameGraphql,
	"_lgraphql/projectsByMetadata.graphql":                                         _lgraphqlProjectsbymetadataGraphql,
	"_lgraphql/removeProjectMetadataByKey.graphql":                                 _lgraphqlRemoveprojectmetadatabykeyGraphql,
	"_lgraphql/updateOpenshift.graphql":                                            _lgraphqlUpdateopenshiftGraphql,
	"_lgraphql/updateProjectMetadata.graphql":                                      _lgraphqlUpdateprojectmetadataGraphql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"_lgraphql": &bintree{nil, map[string]*bintree{
		"addBillingGroup.graphql":                   &bintree{_lgraphqlAddbillinggroupGraphql, map[string]*bintree{}},
		"addEnvVariable.graphql":                    &bintree{_lgraphqlAddenvvariableGraphql, map[string]*bintree{}},
		"addGroup.graphql":                          &bintree{_lgraphqlAddgroupGraphql, map[string]*bintree{}},
		"addGroupsToProject.graphql":                &bintree{_lgraphqlAddgroupstoprojectGraphql, map[string]*bintree{}},
		"addNotificationEmail.graphql":              &bintree{_lgraphqlAddnotificationemailGraphql, map[string]*bintree{}},
		"addNotificationMicrosoftTeams.graphql":     &bintree{_lgraphqlAddnotificationmicrosoftteamsGraphql, map[string]*bintree{}},
		"addNotificationRocketChat.graphql":         &bintree{_lgraphqlAddnotificationrocketchatGraphql, map[string]*bintree{}},
		"addNotificationSlack.graphql":              &bintree{_lgraphqlAddnotificationslackGraphql, map[string]*bintree{}},
		"addNotificationToProject.graphql":          &bintree{_lgraphqlAddnotificationtoprojectGraphql, map[string]*bintree{}},
		"addOpenshift.graphql":                      &bintree{_lgraphqlAddopenshiftGraphql, map[string]*bintree{}},
		"addOrUpdateEnvironment.graphql":            &bintree{_lgraphqlAddorupdateenvironmentGraphql, map[string]*bintree{}},
		"addProject.graphql":                        &bintree{_lgraphqlAddprojectGraphql, map[string]*bintree{}},
		"addProjectToBillingGroup.graphql":          &bintree{_lgraphqlAddprojecttobillinggroupGraphql, map[string]*bintree{}},
		"addSshKey.graphql":                         &bintree{_lgraphqlAddsshkeyGraphql, map[string]*bintree{}},
		"addUser.graphql":                           &bintree{_lgraphqlAdduserGraphql, map[string]*bintree{}},
		"addUserToGroup.graphql":                    &bintree{_lgraphqlAddusertogroupGraphql, map[string]*bintree{}},
		"allEnvironments.graphql":                   &bintree{_lgraphqlAllenvironmentsGraphql, map[string]*bintree{}},
		"allOpenshifts.graphql":                     &bintree{_lgraphqlAllopenshiftsGraphql, map[string]*bintree{}},
		"deleteOpenshift.graphql":                   &bintree{_lgraphqlDeleteopenshiftGraphql, map[string]*bintree{}},
		"deployEnvironmentBranch.graphql":           &bintree{_lgraphqlDeployenvironmentbranchGraphql, map[string]*bintree{}},
		"deployEnvironmentLatest.graphql":           &bintree{_lgraphqlDeployenvironmentlatestGraphql, map[string]*bintree{}},
		"deployEnvironmentPromote.graphql":          &bintree{_lgraphqlDeployenvironmentpromoteGraphql, map[string]*bintree{}},
		"deployEnvironmentPullrequest.graphql":      &bintree{_lgraphqlDeployenvironmentpullrequestGraphql, map[string]*bintree{}},
		"environmentByName.graphql":                 &bintree{_lgraphqlEnvironmentbynameGraphql, map[string]*bintree{}},
		"environmentByOpenshiftProjectName.graphql": &bintree{_lgraphqlEnvironmentbyopenshiftprojectnameGraphql, map[string]*bintree{}},
		"fragments": &bintree{nil, map[string]*bintree{
			"fragmentMinimalAllEnvironments.graphql":                   &bintree{_lgraphqlFragmentsFragmentminimalallenvironmentsGraphql, map[string]*bintree{}},
			"fragmentMinimalEnvironmentByOpenshiftProjectname.graphql": &bintree{_lgraphqlFragmentsFragmentminimalenvironmentbyopenshiftprojectnameGraphql, map[string]*bintree{}},
			"fragmentMinimalProjectByName.graphql":                     &bintree{_lgraphqlFragmentsFragmentminimalprojectbynameGraphql, map[string]*bintree{}},
			"fragmentProjectByName.graphql":                            &bintree{_lgraphqlFragmentsFragmentprojectbynameGraphql, map[string]*bintree{}},
		}},
		"lagoonSchema.graphql":               &bintree{_lgraphqlLagoonschemaGraphql, map[string]*bintree{}},
		"lagoonVersion.graphql":              &bintree{_lgraphqlLagoonversionGraphql, map[string]*bintree{}},
		"me.graphql":                         &bintree{_lgraphqlMeGraphql, map[string]*bintree{}},
		"projectByName.graphql":              &bintree{_lgraphqlProjectbynameGraphql, map[string]*bintree{}},
		"projectsByMetadata.graphql":         &bintree{_lgraphqlProjectsbymetadataGraphql, map[string]*bintree{}},
		"removeProjectMetadataByKey.graphql": &bintree{_lgraphqlRemoveprojectmetadatabykeyGraphql, map[string]*bintree{}},
		"updateOpenshift.graphql":            &bintree{_lgraphqlUpdateopenshiftGraphql, map[string]*bintree{}},
		"updateProjectMetadata.graphql":      &bintree{_lgraphqlUpdateprojectmetadataGraphql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
